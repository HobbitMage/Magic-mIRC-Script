[script]
n0=
n1=alias logview {
n2=  logview.check
n3=  window -ael25k0z @Logview /logviewer.help
n4=  logviewer.help
n5=}
n6=
n7=alias logview.fill {
n8=  ;format: [-ns<d/n[+/-]>] [mask]
n9=  var %flags, %sort, %mask, %file, %i = 1, %time = $ctime
n10=  if ($left($1,1) == -) { set %flags $right($1,-1) | set %mask $2 $+ *.log | if (s isin $1) { set %sort $mid($1,$calc($pos($1,s,1) + 1),2) | set %flags $remove(%flags,s $+ %sort) } }
n11=  else { set %mask $1 $+ *.log | set %sort n+ }
n12=  echo %logview.info -t @logview Flags: $+ %logview.hl %flags Sort by: $+ %logview.hl %sort Mask: $+ %logview.hl %mask
n13=  var  %n = $findfile($logdir,%mask,0,2)
n14=  if (n isin %flags) %n = %n - $findfile($logdir,#* $+ %mask,0,2)
n15=  if ($findfile($logdir,*.log,0,2) == 0) { echo %logview.info @logview Логов в папке нету! Проверьте настройки mirc! | halt }
n16=  if (%n == 0) { echo %logview.info @logview По вашему запросу файлов не найдено! | halt }
n17=  echo %logview.info @logview Files: $+ %logview.hl $findfile($logdir,%mask,0,2) Output: $+ %logview.hl %n
n18=  clear -l @Logview
n19=  while (%i <= $findfile($logdir,%mask,0,2)) {
n20=    %file = $nopath($findfile($logdir,%mask,%i,2))
n21=    if (#* iswm %file) { 
n22=      if (n !isin %flags) aline  -l %logview.chan @Logview %file 
n23=    }
n24=    else aline  -l %logview.nick @Logview %file
n25=    inc %i
n26=  }
n27=  echo %logview.info @logview Вывод файлов завершен. Затрачено $+ %logview.hl $calc($ctime - %time) секунд(а).
n28=  if ((%sort) && (%sort != n+)) logview.sort %sort
n29=}
n30=
n31=alias logview.sort {
n32=  var %i = 1, %m, %mn, %linei, %linej, %n = $line(@logview,0,1), %date, %time = $ctime, %name
n33=  if (!$istok(d+ d- n+ n-,$1,32)) { echo %logview.info @Logview Неизвестное свойство $+ %logview.hl $1 | halt }
n34=  echo %logview.info -t @Logview Сортировка: $1  $+ %logview.hl $+ %n файла(ов).
n35=  if (%n >= 60) echo %logview.info @Logview Пожалуйста, подождите, сортировка может занять некоторое время, остальные окна работать не будут.
n36=  while (%i <= %n) {
n37=    inc %i
n38=  }
n39=  %i = 1
n40=  while (%i <= %n) {
n41=    if ($istok(d+ d-,$1,32)) %m = $file($logdir $+ $line(@Logview,%i,1)).mtime
n42=    if ($istok(n+ n-,$1,32)) %m = $line(@Logview,%i,1)
n43=    %mn = %i
n44=    %j = $calc(%i +1)
n45=    while (%j <= %n) {
n46=      %date = $file($logdir $+ $line(@Logview,%j,1)).mtime
n47=      %name = $line(@Logview,%j,1)
n48=      if ($1 == d-) { if (%date < %m) { %m = %date | %mn = %j } }
n49=      if ($1 == d+) { if (%date > %m) { %m = %date | %mn = %j  } }
n50=      if ($1 == n+) { if (%name < %m) { %m = %name | %mn = %j  } }
n51=      if ($1 == n-) { if (%name > %m) { %m = %name | %mn = %j  } }
n52=      inc %j
n53=    }
n54=    if (%mn != %i) {
n55=      %linei = $line(@Logview,%i,1)
n56=      %linej = $line(@Logview,%mn,1)
n57=      rline -l %logview. [ $+ [ $iif(#* iswm %linej,chan,nick) ] ] @Logview %i %linej
n58=      rline -l %logview. [ $+ [ $iif(#* iswm %linei,chan,nick) ] ] @Logview %mn %linei
n59=    }
n60=    inc %i
n61=  }
n62=  echo %logview.info @logview Сортировка закончена. Прошло: $+ %logview.hl $calc($ctime - %time) секунд(а)
n63=  halt
n64=}
n65=
n66=alias logview.filter {
n67=  echo %logview.info -t @logview Фильтр $line(@logview,0,1) файла(ов)
n68=  var %i = 1, %time = $ctime
n69=  if ($1 == s) {
n70=    echo %logview.info @logview Выделено $+ %logview.hl $iif($sline(@logview,0),$ifmatch,0) $iif($2 == -,останется $+ %logview.hl $calc($line(@logview,0,1) - $sline(@logview,0)) файл(ов))
n71=    while (%i <= $line(@logview,0,1)) {
n72=      if (($2 == +) && (!$line(@logview,%i,1).state)) { dline -l @logview %i | dec %i }
n73=      if (($2 == -) && ($line(@logview,%i,1).state)) { dline -l @logview %i | dec %i }
n74=      inc %i
n75=    }
n76=  }
n77=  if ($1 == m) {
n78=    echo %logview.info @logview Файлов $+ %logview.hl $line(@logview,0,1) Маска $+ %logview.hl $3-
n79=    while (%i <= $line(@logview,0,1)) {
n80=      if (($2 == +) && ($3- !iswm $line(@logview,%i,1))) { dline -l @logview %i | dec %i }
n81=      if (($2 == -) && ($3- iswm $line(@logview,%i,1))) { dline -l @logview %i | dec %i }
n82=      inc %i
n83=    }
n84=  }
n85=  if ($1 == f) {
n86=    echo %logview.info @logview Файлов $+ %logview.hl $line(@logview,0,1) Поиск в файлах строки $+ %logview.hl $2-
n87=    while (%i <= $line(@logview,0,1)) {
n88=      if (!$read($logdir $+ $line(@logview,%i,1),w,* $+ $2- $+ *,1)) { dline -l @logview %i | dec %i }
n89=      inc %i
n90=    }
n91=  }
n92=  echo %logview.info @logview Фильтрация завершена. Результат $+ %logview.hl $line(@logview,0,1) файл(ов). Затрачено $+ %logview.hl $calc($ctime - %time) секунд(а).
n93=}
n94=
n95=alias logview.play {
n96=  /*
n97=  if (!%prefs.logview.pause) { echo @logview $chr(37) $+ prefs.logview.pause установлена в 500 (пауза через 500 строк) | set %prefs.logview.pause 500 }
n98=  if (!%prefs.logview.pauselen) { echo @logview $chr(37) $+ prefs.logview.pauselen установлена в 10 (пауза 10 секунд) | set %prefs.logview.pauselen 10 }
n99=  if (!%prefs.logview.mistrings) { echo @logview $chr(37) $+ prefs.logview.mistrings установлена в 300 (замедленный вывод при 300+ строк) | set %prefs.logview.mistrings 300 }
n100=  if (!%prefs.logview.spause) { echo @logview $chr(37) $+ prefs.logview.spause установлена в 1000 (1000 миллисекунд между строками) | set %prefs.logview.spause 1000 }
n101=  */
n102=  var %flag, %file, %mod
n103=
n104=  if ($left($1,1) == -) { set %flag $right($1,-1) | set %file $logdir $+ $2 | set %mod $iif(%flag == m,* $+ $3- $+ *,$3-) }
n105=  else set %file $logdir $+ $1
n106=  var %lines = $lines(%file), %i = 1, %j = 0, %n = 0
n107=  clear @logview
n108=  echo %logview.info @logview Файл %file (строк %lines $+ ): $iif($2,%flag %mod)
n109=  if ($fopen(logview)) .fclose logview
n110=  .fopen logview " $+ %file $+ "
n111=  while (!$feof) {
n112=    set %string $fread(logview)
n113=    if (!%flag) {
n114=      echo @logview < $+ %i $+ > %string | inc %j
n115=    }
n116=    if ((%flag == s) && (%i isnum %mod)) {
n117=      echo @logview < $+ %i $+ > %string | inc %j
n118=    }
n119=    if ((%flag == m) && (%mod iswm %string)) {
n120=      echo @logview < $+ %i $+ > %string | inc %j
n121=    }
n122=    inc %i
n123=  }
n124=  .fclose logview
n125=  echo %logview.info @logview Вывод окончен. Выведено %j строк.
n126=}
n127=
n128=menu menubar {
n129=  .-
n130=  .Логи
n131=  ..Просмотровщик:logview
n132=  .-
n133=}
n134=
n135=on *:load:{
n136=  logview.check
n137=  echo $iif(%logview.info isnum 0-15,$ifmatch) -a Magic Script Log Viewer loaded!
n138=}
n139=
n140=alias logview.check {
n141=  var %tmp, %info, %nick, %chan, %hl, %i = 0
n142=  var %theme = $readini(mirc.ini,text,theme)
n143=  while (%i < $ini(mirc.ini,colors,0)) {
n144=    set %tmp $readini(mirc.ini,colors,n $+ %i)
n145=    if ($gettok(%tmp,1,44) == %theme) { break }
n146=    inc %i
n147=  }
n148=  if (%logview.info !isnum 0-15) {
n149=    if (!%logview.info) set %logview.info $iif(%colors.info isnum 0-15,$ifmatch,$str(0,$calc(2 - $len($gettok(%tmp,6,44)))) $+ $gettok(%tmp,6,44))
n150=    else %info = %logview.info
n151=  }
n152=  if (%logview.nick !isnum 0-15) {
n153=    if (!%logview.nick) set %logview.nick $iif(%colors.nick isnum 0-15,$ifmatch,$str(0,$calc(2 - $len($gettok(%tmp,12,44)))) $+ $gettok(%tmp,12,44))
n154=    else %nick = %logview.nick
n155=  }
n156=  if (%logview.chan !isnum 0-15) {
n157=    if (!%logview.chan) set %logview.chan $iif(%colors.chan isnum 0-15,$ifmatch,$str(0,$calc(2 - $len($gettok(%tmp,3,44)))) $+ $gettok(%tmp,3,44))
n158=    else %chan = %logview.chan
n159=  }
n160=  if (%logview.hl !isnum 0-15) {
n161=    if (!%logview.hl) set %logview.hl $iif(%colors.highlight isnum 0-15,$ifmatch,$str(0,$calc(2 - $len($gettok(%tmp,5,44)))) $+ $gettok(%tmp,5,44))
n162=    else %hl = %logview.hl
n163=  }
n164=  if ($numtok(%info %nick %chan %hl,32)) echo -ast Скрипт Magic Logviewer предпологает наличие переменных цвета. В случае их отсутствия возможны ошибки в работе.
n165=  if (%info) echo -ast %colors.info содержит значение  $+ %info $+  измените это значение на число 0-15 командой /set $chr(37) $+ logview.info число
n166=  if (%nick) echo -ast %colors.nick содержит значение  $+ %nick $+  измените это значение на число 0-15 командой /set $chr(37) $+ logview.nick число
n167=  if (%chan) echo -ast %colors.chan содержит значение  $+ %chan $+  измените это значение на число 0-15 командой /set $chr(37) $+ logview.chan число
n168=  if (%hl) echo -ast %colors.hl содержит значение  $+ %hl $+  измените это значение на число 0-15 командой /set $chr(37) $+ logview.hl число
n169=  if ($numtok(%info %nick %chan %hl,32)) echo -ast Если вы уверены, что никаких важных данных в этих переменных не содержится, можете ввести команду /logviewer.reset, которая установит цвета из вашей цветовой схемы по умолчанию.
n170=}
n171=
n172=alias logviewer.reset {
n173=  unset %logview.info
n174=  unset %logview.chan
n175=  unset %logview.nick
n176=  unset %logview.hl
n177=  logview.check
n178=}
n179=
n180=menu @logview {
n181=  dclick:{ %logviewer.mask = $$input(Введите маску,ey,Вывод по маске,%logviewer.mask) | logview.play -m $$sline($active,1) %logviewer.mask }
n182=  Перегрузить список логов
n183=  .Полный:logview.fill
n184=  .Каналы:logview.fill $chr(35)
n185=  .Приваты:logview.fill -n
n186=  .Список по маске:{ %logviewer.outmask = $$input(Введите маску вывода: $crlf * - любая комбинация символов $crlf ? - один любой символ $crlf $+ в конце будет добавлено *.log,eyq,Маска вывода логов,%logviewer.outmask) | logview.fill %logviewer.outmask }
n187=  Сортировка
n188=  .По дате:logview.sort d-
n189=  .По дате обратно:logview.sort d+
n190=  .По имени:logview.sort n+
n191=  .По имени обратно:logview.sort n-
n192=  Фильтр
n193=  .Удалить по маске:{ %logviewer.filemask = $$input(Введите маску,ey,Фильтр логов,%logviewer.filemask) | logview.filter m - %logviewer.filemask }
n194=  .Оставить по маске:{ %logviewer.filemask = $$input(Введите маску,ey,Фильтр логов,%logviewer.filemask) | logview.filter m + %logviewer.filemask }
n195=  .Удалить выделенные:logview.filter s -
n196=  .Оставить выделенные:logview.filter s +
n197=  .Поиск строки в файле:{ %logviewer.searchmask = $$input(Введите маску,ey,Фильтр логов,%logviewer.searchmask) | logview.filter f %logviewer.searchmask }
n198=  Вывод
n199=  .$iif($1,Вывести полностью):logview.play $$1
n200=  .$iif($1,Вывести строки):logview.play -s $$1 $input(Введите номера строк,ey,Построчный вывод,1- $+ $lines($logdir $+ $1))
n201=  .$iif($1,Вывести по маске):{ %logviewer.mask = $$input(Введите маску,ey,Вывод по маске,%logviewer.mask) | logview.play -m $$1 %logviewer.mask }
n202=}
n203=
n204=alias logviewer.help {
n205=  clear @Logview
n206=  var %ec echo %logview.info -h @Logview 
n207=  %ec Информация о Magic Logviewer 0.7
n208=  %ec Скрипт позволяет просматривать файлы логов в окне mIRC сохраняя оригинальное форматирование и цвета.
n209=  %ec Для удобства предоставления информации используются четыре переменные цвета:
n210=  %ec $chr(9) $chr(37) $+ logview.nick $chr(9) ( $+ %logview.nick $+ ) $chr(9) - $chr(9) цвет файлов приватов
n211=  %ec $chr(9) $chr(37) $+ logview.chan $chr(9) ( $+ %logview.chan $+ ) $chr(9) - $chr(9) цвет файлов каналов
n212=  %ec $chr(9) $chr(37) $+ logview.info $chr(9) ( $+ %logview.info $+ ) $chr(9) - $chr(9) цвет информационных строк
n213=  %ec $chr(9) $chr(37) $+ logview.hl $chr(9) ( $+ %logview.hl $+ ) $chr(9) - $chr(9) цвет выделенной информации
n214=  %ec В скобках указано текущее значение цвета, сменить его можно командой /set $chr(37) $+ logview.nick <число>
n215=  %ec <Число> должно лежать в пределах 0-15 и является номером цвета IRC - просмотреть их номера можно нажав Ctrl+K
n216=  %ec Для предотвращения ошибок отображения чисел старайтесь использовать двузначные номера цвета, например 04
n217=  echo @Logview 
n218=  %ec Для начала поиска необходимо перегрузить список логов (из меню, вызываемого правой клавишей мышки)
n219=  %ec Варианты загрузки:
n220=  %ec $chr(9) Полный $chr(9) - $chr(9) будут выведены все файлы логов (*.log)
n221=  %ec $chr(9) Каналы $chr(9) - $chr(9) будут выведены все файлы логов каналов (#*.log)
n222=  %ec $chr(9) Приваты $chr(9) - $chr(9) будут выведены все файлы логов приватов
n223=  %ec $chr(9) По маске $chr(9) - $chr(9) будут выведены все файлы логов, удовлетворяющие заданному запросу
n224=  %ec Например: a* выведет все логи приватов с никами, начинающимися на a, #*b выведет все логи каналов, содержащих в имени букву b
n225=  echo @Logview 
n226=  %ec Загруженный список логов можно отсортировать по имени и дате в возрастающем или убывающем порядке
n227=  echo @Logview 
n228=  %ec Список логов можно отфильтровать:
n229=  %ec $chr(9) Удалить/Оставить по маске $chr(9) - $chr(9) будут удалены/оставлены файлы логов, удовлетворяющие заданной маске
n230=  %ec $chr(9) Удалить/Оставить выделенные $chr(9) - $chr(9) будут удалены/оставлены файлы логов, выделенные мышкой (shift+mclick,ctrl+mclick)
n231=  %ec $chr(9) Поиск строки в файле $chr(9) - $chr(9) будут оставлены файлы логов, содержащие в себе хотя бы одну строку, удовлетворяющую маске
n232=  echo @Logview 
n233=  %ec Вывести файл лога можно тремя способами:
n234=  %ec $chr(9) Полностью $chr(9) - $chr(9) будет выведен весь файл
n235=  %ec $chr(9) Строки $chr(9) - $chr(9) будут выведы строки, лежащие в заданном интервале (<начало>-<конец>); по умолчанию интервал принимает предельные значения (1-количество строк)
n236=  %ec $chr(9) По маске $chr(9) - $chr(9) будут выведы строки, удовлетворяющие заданной маске
n237=  %ec Для удобства поиска каждая строка предворяется своим номером.
n238=}
